"""
器官診斷映射服務
根據PDF文檔內容，將面部區域膚色異常映射到對應的功能/病變導向
"""

# 根據PDF文檔内容
ORGAN_DIAGNOSIS_MAP = {
    "心(額上1/3髮際)": {
        "發紅": "可能心臟發炎、心跳快、壓力大，容易心悸或胸悶",
        "發黑": "血液循環不順，容易覺得缺氧、頭暈或疲倦"
    },
    "肺(眉間/印堂)": {
        "發紅": "呼吸道發炎，常見咳嗽、喉嚨痛",
        "發黑": "呼吸品質不好，長期容易喘、走路或運動就累",
        "發白": "短時間內呼吸不順，像氣上不來或胸口緊"
    },
    "肝(鼻樑中段)": {
        "發綠": "肝膽代謝不順，容易覺得脹、消化油膩差",
        "發紅": "肝臟發炎，情緒易暴躁、口乾口苦",
        "發黑": "肝功能長期不好，可能會疲倦或臉色暗沉"
    },
    "膽(鼻樑外側高處)": {
        "發黃": "眼白變黃，提示膽道或肝膽代謝問題（如黃疸）",
        "發綠": "膽汁流動不順，吃油膩後不舒服",
        "發紅": "膽囊或膽道發炎，常有右上腹痛"
    },
    "脾(鼻頭)": {
        "發紅": "消化負擔大，常見食後脹或腸胃不適"
    },
    "胃(鼻翼)": {
        "發紅": "胃酸多、胃炎，可能胃灼熱或口臭",
        "發綠": "胃蠕動差，食物停久，餐後容易脹或胃痛"
    },
    "小腸(顴骨下方內側)": {
        "發紅": "小腸發炎，消化吸收不好，容易瘦、拉肚子"
    },
    "大腸(顴骨下方外側)": {
        "發紅": "腸道刺激，可能拉肚子、腹痛",
        "發黑": "長期便秘"
    },
    "左大腸": {
        "發紅": "腸道刺激，可能拉肚子、腹痛",
        "發黑": "長期便秘"
    },
    "右大腸": {
        "發紅": "腸道刺激，可能拉肚子、腹痛",
        "發黑": "長期便秘"
    },
    "腎(太陽穴垂直下至耳垂交界)": {
        "發黑": "腎功能下降，代謝廢物不佳，容易疲倦、水腫",
        "發綠": "水分代謝不良，下半身容易腫或沉重"
    },
    "左腎": {
        "發黑": "腎功能下降，代謝廢物不佳，容易疲倦、水腫",
        "發綠": "水分代謝不良，下半身容易腫或沉重"
    },
    "右腎": {
        "發黑": "腎功能下降，代謝廢物不佳，容易疲倦、水腫",
        "發綠": "水分代謝不良，下半身容易腫或沉重"
    },
    "生殖（⼦宮/前列腺）": {
        "發紅": "女生可能有子宮或前列腺發炎，經期疼痛或分泌物異常；男生排尿不適",
        "發黑": "慢性循環差，骨盆腔或前列腺鬱積"
    },
    "眼白": {
        "發黃": "直接指向肝膽代謝異常，如肝炎、膽結石或膽道阻塞"
    },
    "右眼白": {
        "發黃": "直接指向肝膽代謝異常，如肝炎、膽結石或膽道阻塞"
    },
    "腦": {
        "發紅": "可能心臟發炎、心跳快、壓力大，容易心悸或胸悶",
        "發黑": "血液循環不順，容易覺得缺氧、頭暈或疲倦"
    },
    "⼦宮/前列腺(下頰、人中)": {
        "發紅": "女生可能有子宮發炎，經期疼痛或分泌物異常；男生排尿不適",
        "發黑": "慢性循環差，骨盆腔或前列腺鬱積"
    }
}

def get_diagnosis(organ, condition):
    """
    根據器官和膚色狀態返回診斷描述
    
    Args:
        organ (str): 器官名稱（如 "心", "肺", "肝" 等）
        condition (str): 膚色狀態（如 "發紅", "發黑", "發綠" 等）
    
    Returns:
        str: 對應的功能/病變導向描述，如果沒有找到則返回None
    """
    if organ in ORGAN_DIAGNOSIS_MAP:
        return ORGAN_DIAGNOSIS_MAP[organ].get(condition)
    return None

def get_all_diagnoses(region_results):
    """
    根據所有異常區域返回完整的診斷結果
    
    Args:
        region_results (dict): 異常區域字典，格式為 {器官: 狀態}
    
    Returns:
        dict: 診斷結果字典，格式為 {器官: 診斷描述}
    """
    diagnoses = {}
    for organ, condition in region_results.items():
        diagnosis = get_diagnosis(organ, condition)
        if diagnosis:
            diagnoses[organ] = {
                "condition": condition,
                "diagnosis": diagnosis
            }
    return diagnoses

def format_diagnosis_text(diagnoses):
    """
    將診斷結果格式化為文本輸出
    
    Args:
        diagnoses (dict): 診斷結果字典
    
    Returns:
        str: 格式化的診斷文本
    """
    if not diagnoses:
        return "所有區域膚色狀態正常"
    
    text_lines = []
    for organ, info in diagnoses.items():
        text_lines.append(f"【{organ}】{info['condition']}")
        text_lines.append(f"  → {info['diagnosis']}\n")
    
    return "\n".join(text_lines)